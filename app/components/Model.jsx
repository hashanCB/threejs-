/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 model.gltf 
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame, useThree } from "react-three-fiber";

export function Model(props) {
  const { nodes, materials } = useGLTF("/model.gltf");
  const ref = useRef();
  const { viewport, camera } = useThree();
  const { width, height } = viewport.getCurrentViewport(camera, [
    0,
    0,
    props.position[2],
  ]);

  useFrame(() => {
    ref.current.position.y += 0.01;
    ref.current.rotation.y += 0.002;
    ref.current.rotation.x += 0.002;

    if (ref.current.position.y > height / 1.4) {
      ref.current.position.y = -height / 1.3;
    }
  });

  return (
    <group {...props} dispose={null} ref={ref}>
      <mesh
        geometry={nodes.star.geometry}
        material={materials["Yellow.030"]}
        rotation={[Math.PI / 2, 0, 0]}
      >
        <meshStandardMaterial
          {...materials["Yellow.030"]}
          color={props.color}
          envMapIntensity={2} //make a gritness look on text
          roughness={0.2}
        />
      </mesh>
    </group>
  );
}

useGLTF.preload("/model.gltf");
